// { Driver Code Starts


// Java code to find Longest Consecutive Subsequence
import java.util.Scanner;
import java.util.*;
import java.util.HashSet;

class FindLongestSubsequence
{
    // Driver Code
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		
		while(t>0)
		{
			int n = sc.nextInt();
			int a[] = new int[n];
			
			for(int i=0; i<n; i++)
				a[i] = sc.nextInt();
		    
		    // Making object of GfG	
			GfG g = new GfG();
			
			System.out.println(g.findLongestConseqSubseq(a, n));
		
		t--;
		}
	}
}// } Driver Code Ends




class GfG
{
    // Function to find Longest Consecutive Subsequence
    int findLongestConseqSubseq(int a[], int n)
    {
        
	    // Your code here
	    int ans=Integer.MIN_VALUE;
	    HashSet<Integer> hs=new HashSet<Integer>();
	    
	    for(int i=0;i<n;i++){
	        hs.add(a[i]);
	    }
	    for(int i=0;i<n;i++){
	        
	        if(!hs.contains(a[i]-1)){
	        
	        int j=a[i];
	        while(hs.contains(j)){
	            j++;
	        }   
	            ans=Math.max(ans,j-a[i]);
	        }
	    }
	    return ans;
	    
    }
}
