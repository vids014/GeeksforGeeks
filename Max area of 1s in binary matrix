// { Driver Code Starts
import java.util.*;
import java.lang.*;
class MaxRect {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int m = sc.nextInt();
            int n = sc.nextInt();
            int[][] a = new int[1000][1000];
            for (int i = 0; i < m; i++)
                for (int j = 0; j < n; j++) a[i][j] = sc.nextInt();
            GfG g = new GfG();

            System.out.println(g.maxArea(a, m, n));
        }
    }
}
// } Driver Code Ends


/*Complete the function given below*/
class GfG {
    public int maxArea(int M[][], int m, int n) {
        // add code here.
        Stack<Integer> st = new Stack<Integer>();
        int t[]=null;
        int max=0,res=0;
        for(int r=0;r<m;r++){
            if(r==0){
                t=M[0];
            }else{
                for(int c=0;c<n;c++){
                    if(M[r][c]==0)
                        t[c]=0;
                    else
                        t[c]=t[c]+1;
                    }
                }
            
            int i=0;
            while(i<n){
                if(st.isEmpty()||t[i]>=t[st.peek()])
                    st.push(i++);
                else
                max=t[st.pop()]*(st.isEmpty()?i:(i-1-st.peek()));
                res=Math.max(max,res);
            }
            while(!st.isEmpty()){
                max=t[st.pop()]*(st.isEmpty()?i:(i-1-st.peek()));
                res=Math.max(max,res);
            }
            
        }
        return res;
        
    }
}
